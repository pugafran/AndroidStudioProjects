/* 
Copyright (c) 2024 Kotlin Data Classes Generated from JSON powered by http://www.json2kotlin.com

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

For support, please feel free to contact me at https://www.linkedin.com/in/syedabsar */
data class Product(
	val _id: String = "",
	val __keywordswords: List<String> = emptyList(),
	val added_countries_tags: List<String> = emptyList(),
	val additives_debug_tags: List<String> = emptyList(),
	val additives_n: Int = 0,
	val additives_old_n: Int = 0,
	val additives_old_tags: List<String> = emptyList(),
	val additives_original_tags: List<String> = emptyList(),
	val additives_prev_original_tags: List<String> = emptyList(),
	val additives_tags: List<String> = emptyList(),
	val allergens: String = "",
	val allergens_from_ingredients: String = "",
	val allergens_from_user: String = "",
	val allergens_hierarchy: List<String> = emptyList(),
	val allergens_lc: String = "",
	val allergens_tags: List<String> = emptyList(),
	val amino_acids_prev_tags: List<String> = emptyList(),
	val amino_acids_tags: List<String> = emptyList(),
	val brand_owner: String = "",
	val brand_owner_imported: String = "",
	var brands: String = "",
	val brands_tags: List<String> = emptyList(),
	val categories: String = "",
	val categories_hierarchy: List<String> = emptyList(),
	val categories_imported: String = "",
	val categories_lc: String = "",
	val categories_old: String = "",
	val categories_properties: Categories_properties = Categories_properties(""),
	val categories_properties_tags: List<String> = emptyList(),
	val categories_tags: List<String> = emptyList(),
	val category_properties: Category_properties = Category_properties(""),
	val checkers: List<String> = emptyList(),
	val checkers_tags: List<String> = emptyList(),
	val ciqual_food_name_tags: List<String> = emptyList(),
	val cities_tags: List<String> = emptyList(),
	val code: String = "",
	val codes_tags: List<String> = emptyList(),
	val compared_to_category: String = "",
	val complete: Int = 0,
	val completeness: Double = 0.0,
	val correctors: List<String> = emptyList(),
	val correctors_tags: List<String> = emptyList(),
	val countries: String = "",
	val countries_hierarchy: List<String> = emptyList(),
	val countries_imported: String = "",
	val countries_lc: String = "",
	val countries_tags: List<String> = emptyList(),
	val created_t: Int = 0,
	val creator: String = "",
	val data_quality_bugs_tags: List<String> = emptyList(),
	val data_quality_errors_tags: List<String> = emptyList(),
	val data_quality_info_tags: List<String> = emptyList(),
	val data_quality_tags: List<String> = emptyList(),
	val data_quality_warnings_tags: List<String> = emptyList(),
	val data_sources: String = "",
	val data_sources_imported: String = "",
	val data_sources_tags: List<String> = emptyList(),
	val debug_param_sorted_langs: List<String> = emptyList(),
	val ecoscore_data: Ecoscore_data = Ecoscore_data(
		Adjustments(
			Origins_of_ingredients(
				emptyList(), 0, 0,
				emptyList(),
				emptyList(), 0, Transportation_scores(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0),
				0, Transportation_values(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0),
				0, Values(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,0)
			),
			Packaging(0, emptyList(), 0, 0, ""),
			Production_system(emptyList(), 0, ""),
			Threatened_species("")
		),
		Agribalyse(""), Missing(0, 0, 0), 0, Scores(""), ""
	),
	val ecoscore_grade: String = "",
	val ecoscore_tags: List<String> = emptyList(),
	val editors: List<String> = emptyList(),
	val editors_tags: List<String> = emptyList(),
	val emb_codes: String = "",
	val emb_codes_20141016: String = "",
	val emb_codes_orig: String = "",
	val emb_codes_tags: List<String> = emptyList(),
	val entry_dates_tags: List<String> = emptyList(),
	val expiration_date: String = "",
	val food_groups: String = "",
	val food_groups_tags: List<String> = emptyList(),
	val fruits_vegetables_nuts_100g_estimate: Int = 0,
	val generic_name: String = "",
	val generic_name_en: String = "",
	val id: String = "",
	val image_front_small_url: String = "",
	val image_front_thumb_url: String = "",
	val image_front_url: String = "",
	val image_ingredients_small_url: String = "",
	val image_ingredients_thumb_url: String = "",
	val image_ingredients_url: String = "",
	val image_nutrition_small_url: String = "",
	val image_nutrition_thumb_url: String = "",
	val image_nutrition_url: String = "",
	val image_small_url: String = "",
	val image_thumb_url: String = "",
	val image_url: String = "",
	val images: Images = Images(_1(Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),0,""),_2(Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),0,""),_3(Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),0,""),_4(Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),0,""),_5(Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),0,""),Front(Display(""),Small(""),Thumb("")),Front_en("",0,"",0,Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),""),Ingredients(Display(""),Small(""),Thumb("")),Ingredients_en("",0,"",0,Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),""),Nutrition(Display(""),Small(""),Thumb("")),Nutrition_en("",0,"",0,Sizes(_100(0,0),_200(0,0),_400(0,0),Full(0,0)),"")),
	val informers: List<String> = emptyList(),
	val informers_tags: List<String> = emptyList(),
	val ingredients: List<Ingredients> = emptyList(),
	val ingredients_analysis: Ingredients_analysis = Ingredients_analysis(emptyList(), emptyList(),
		emptyList()),
	val ingredients_analysis_tags: List<String> = emptyList(),
	val ingredients_debug: List<String> = emptyList(),
	val ingredients_from_or_that_may_be_from_palm_oil_n: Int = 0,
	val ingredients_from_palm_oil_n: Int = 0,
	val ingredients_from_palm_oil_tags: List<String> = emptyList(),
	val ingredients_hierarchy: List<String> = emptyList(),
	val ingredients_ids_debug: List<String> = emptyList(),
	val ingredients_lc: String = "",
	val ingredients_n: Int = 0,
	val ingredients_n_tags: List<String> = emptyList(),
	val ingredients_original_tags: List<String> = emptyList(),
	val ingredients_percent_analysis: Int = 0,
	val ingredients_tags: List<String> = emptyList(),
	val ingredients_text: String = "",
	val ingredients_text_debug: String = "",
	val ingredients_text_en: String = "",
	val ingredients_text_en_imported: String = "",
	val ingredients_text_with_allergens: String = "",
	val ingredients_text_with_allergens_en: String = "",
	val ingredients_that_may_be_from_palm_oil_n: Int = 0,
	val ingredients_that_may_be_from_palm_oil_tags: List<String> = emptyList(),
	val ingredients_with_specified_percent_n: Int = 0,
	val ingredients_with_specified_percent_sum: Int = 0,
	val ingredients_with_unspecified_percent_n: Int = 0,
	val ingredients_with_unspecified_percent_sum: Int = 0,
	val ingredients_without_ciqual_codes: List<String> = emptyList(),
	val ingredients_without_ciqual_codes_n: Int = 0,
	val interface_version_created: String = "",
	val interface_version_modified: String = "",
	val known_ingredients_n: Int = 0,
	val labels: String = "",
	val labels_hierarchy: List<String> = emptyList(),
	val labels_lc: String = "",
	val labels_old: String = "",
	val labels_tags: List<String> = emptyList(),
	val lang: String = "",
	val languages: Languages = Languages(0),
	val languages_codes: Languages_codes = Languages_codes(0),
	val languages_hierarchy: List<String> = emptyList(),
	val languages_tags: List<String> = emptyList(),
	val last_edit_dates_tags: List<String> = emptyList(),
	val last_editor: String = "",
	val last_image_dates_tags: List<String> = emptyList(),
	val last_image_t: Int = 0,
	val last_modified_by: String = "",
	val last_modified_t: Int = 0,
	val last_updated_t: Int = 0,
	val lc: String = "",
	val lc_imported: String = "",
	val link: String = "",
	val main_countries_tags: List<String> = emptyList(),
	val manufacturing_places: String = "",
	val manufacturing_places_tags: List<String> = emptyList(),
	val max_imgid: Int = 0,
	val minerals_prev_tags: List<String> = emptyList(),
	val minerals_tags: List<String> = emptyList(),
	val misc_tags: List<String> = emptyList(),
	val new_additives_n: Int = 0,
	val no_nutrition_data: String = "",
	var nova_group: Int = 0,
	val nova_group_debug: String = "",
	val nova_groups: Int = 0,
	val nova_groups_markers: Nova_groups_markers = Nova_groups_markers(emptyList(), emptyList()),
	val nova_groups_tags: List<String> = emptyList(),
	val nucleotides_prev_tags: List<String> = emptyList(),
	val nucleotides_tags: List<String> = emptyList(),
	val nutrient_levels: Nutrient_levels = Nutrient_levels("","","",""),
	val nutrient_levels_tags: List<String> = emptyList(),
	val nutriments: Nutriments = Nutriments(0.0, 0.0, 0.0, "", 0, 0.0, 0.0, 0, "", 0.0, 0, 0, 0, "", 0, 0, 0, 0, 0, "", 0, 0.0, 0, 0, "", 0, 0.0, 0.0, 0, "", 0.0, 0.0, 0.0, 0.0, "", 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, "", 0.0, 0, 0, 0, 0, 0, 0.0, 0.0, 0, "", 0.0, 0.0, 0.0, 0.0, "", 0, 0.0, 0.0, 0.0, "", 0.0, 0.0, 0.0, 0.0, "", 0, 0.0, 0.0, 0, "", 0.0, 0, 0, 0, "", 0, 0.0, 0.0, 0.0, "", 0, 0, 0, 0, "", 0),
	val nutriscore: Nutriscore = Nutriscore(_2021(0,Data(Components(emptyList(), emptyList()),0,"",0,0,0,0,0,0,0,
		emptyList(),0,0),"",0,0,0,0),_2023(0,Data(Components(emptyList(), emptyList()),0,"",0,0,0,0,0,0,0,
		emptyList(),0,0),"",0,0,0,0)),
	val nutriscore_2021_tags: List<String> = emptyList(),
	val nutriscore_2023_tags: List<String> = emptyList(),
	val nutriscore_data: Nutriscore_data = Nutriscore_data(0, 0, 0, 0.0, 0, 0.0, 0.0, 0, 0, "", 0, 0, 0, 0, 0, 0, 0.0, 0, 0.0, 0.0, 0, 0.0, 0, 0, 0, 0, 0.0, 0, 0.0
	),
	val nutriscore_grade: String = "",
	val nutriscore_score: Int = 0,
	val nutriscore_score_opposite: Int = 0,
	val nutriscore_tags: List<String> = emptyList(),
	val nutriscore_version: Int = 0,
	val nutrition_data: String = "",
	val obsolete: String = "",
	val obsolete_since_date: String = "",
	val origin: String = "",
	val origin_en: String = "",
	val origins: String = "",
	val origins_hierarchy: List<String> = emptyList(),
	val origins_lc: String = "",
	val origins_old: String = "",
	val origins_tags: List<String> = emptyList(),
	val other_nutritional_substances_tags: List<String> = emptyList(),
	val packaging: String = "",
	val packaging_hierarchy: List<String> = emptyList(),
	val packaging_lc: String = "",
	val packaging_materials_tags: List<String> = emptyList(),
	val packaging_old: String = "",
	val packaging_old_before_taxonomization: String = "",
	val packaging_recycling_tags: List<String> = emptyList(),
	val packaging_shapes_tags: List<String> = emptyList(),
	val packaging_tags: List<String> = emptyList(),
	val packaging_text: String = "",
	val packaging_text_en: String = "",
	val packagings: List<Packagings> = emptyList(),
	val packagings_complete: Int = 0,
	val packagings_materials: Packagings_materials = Packagings_materials(All(""),En_unknown("")),
	val packagings_n: Int = 0,
	val photographers: List<String> = emptyList(),
	val photographers_tags: List<String> = emptyList(),
	val pnns_groups_1: String = "",
	val pnns_groups_1_tags: List<String> = emptyList(),
	val pnns_groups_2: String = "",
	val pnns_groups_2_tags: List<String> = emptyList(),
	val popularity_popularity_key: Int = 0,
	val popularity_tags: List<String> = emptyList(),
	var product_name: String = "",
	val product_name_en: String = "",
	val product_name_en_imported: String = "",
	val product_quantity: Int = 0,
	val product_quantity_unit: String = "",
	val purchase_places: String = "",
	val purchase_places_tags: List<String> = emptyList(),
	val quantity: String = "",
	val removed_countries_tags: List<String> = emptyList(),
	val rev: Int = 0,
	val scans_n: Int = 0,
	val selected_images: Selected_images = Selected_images(Front(Display(""),Small(""),Thumb("")),Ingredients(Display(""),Small(""),Thumb("")),Nutrition(Display(""),Small(""),Thumb(""))),
)

